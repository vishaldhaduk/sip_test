<?xml version="1.0"?>
<!--
    This file is part of Peers, a java SIP softphone.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
    
    Copyright 2007, 2008, 2009, 2010 Yohann Martineau 
  -->
<project name="peers" default="dist">

  <property name="main.class" value="net.sourceforge.peers.gui.MainFrame"/>
  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="lib.dir" value="lib"/>
  <property name="src.dir" value="src"/>
  <property name="test.dir" value="test"/>
  <property name="conf.dir" value="conf"/>
  <property name="resources.dir" value="resources"/>
  <property name="junit.reports" value="${build.dir}/junit"/>
  <property name="testng.reports" value="${build.dir}/testng"/>
  <property name="log.peers" value="peers.log"/>
  <property name="log.transport" value="transport.log"/>

  <description>
    This application is a java sip softphone, based on RFC 3261.
  </description>

  <path id="test">
    <pathelement location="${lib.dir}/testng-5.8-jdk15.jar"/>
    <pathelement location="${classes.dir}"/>
  </path>

  <taskdef name="testng" classpathref="test"
      classname="org.testng.TestNGAntTask"/>

  <target name="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="compile" depends="init">
    <javac destdir="${classes.dir}" srcdir="${src.dir}" debug="true"
        failonerror="true" includeantruntime="false"/>
  </target>

  <target name="test-compile" depends="init">
    <javac destdir="${classes.dir}" srcdir="${test.dir}" debug="true"
        includeantruntime="false">
      <classpath>
        <fileset dir="${lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar destfile="${build.dir}/${ant.project.name}.jar"
         basedir="${classes.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.png"/>
        <include name="**/*.gif"/>
      </fileset>
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
  </target>

  <target name="dist" depends="jar">
    <mkdir dir="${build.dir}/logs"/>
    <touch file="${build.dir}/logs/${log.peers}"/>
    <touch file="${build.dir}/logs/${log.transport}"/>
    <mkdir dir="${build.dir}/media"/>
    <zip destfile="${build.dir}/${ant.project.name}.zip">
      <zipfileset prefix="${ant.project.name}/logs" dir="${build.dir}/logs"/>
      <zipfileset prefix="${ant.project.name}/media" dir="${build.dir}/media"/>
      <zipfileset prefix="${ant.project.name}"
                  file="${build.dir}/${ant.project.name}.jar"/>
      <zipfileset prefix="${ant.project.name}/conf" dir="${conf.dir}"/>
      <zipfileset prefix="${ant.project.name}"
                  file="${resources.dir}/peers.sh"
                  filemode="755"/>
      <zipfileset prefix="${ant.project.name}"
                  file="${resources.dir}/peers.bat"/>
      <zipfileset prefix="${ant.project.name}" dir=".">
        <include name="gpl.txt"/>
        <include name="README.txt"/>
      </zipfileset>
    </zip>
  </target>

  <target name="dist-src" depends="jar, compile, test-compile">
    <mkdir dir="${build.dir}/logs"/>
    <touch file="${build.dir}/logs/${log.peers}"/>
    <touch file="${build.dir}/logs/${log.transport}"/>
  	<mkdir dir="${build.dir}/media"/>
    <zip destfile="${build.dir}/${ant.project.name}-src.zip">
      <zipfileset prefix="${ant.project.name}/logs" dir="${build.dir}/logs"/>
      <zipfileset prefix="${ant.project.name}/media" dir="${build.dir}/media"/>
      <zipfileset prefix="${ant.project.name}/src" dir="${src.dir}"/>
      <zipfileset prefix="${ant.project.name}/test" dir="${test.dir}"/>
      <zipfileset prefix="${ant.project.name}/resources" dir="${resources.dir}"/>
      <zipfileset prefix="${ant.project.name}/lib" dir="${lib.dir}"/>
      <zipfileset prefix="${ant.project.name}"
                  file="${build.dir}/${ant.project.name}.jar"/>
      <zipfileset prefix="${ant.project.name}/conf" dir="${conf.dir}"/>
      <zipfileset prefix="${ant.project.name}"
                  file="${resources.dir}/peers.sh"
                  filemode="755"/>
      <zipfileset prefix="${ant.project.name}"
                  file="${resources.dir}/peers.bat"/>
      <zipfileset prefix="${ant.project.name}" dir=".">
        <include name="gpl.txt"/>
        <include name="README.txt"/>
        <include name="build.xml"/>
      </zipfileset>
    </zip>
  </target>

  <target name="test" depends="compile, test-compile">
    <mkdir dir="${testng.reports}"/>
    <testng classpathref="test" outputDir="${testng.reports}">
      <!-- <classfileset dir="${classes.dir}" includes="**/*TestNG.class"/> -->
      <xmlfileset dir="${test.dir}" includes="*.testng.xml"/>
    </testng>
  </target>

</project>
